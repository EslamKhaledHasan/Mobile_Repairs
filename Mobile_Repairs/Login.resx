<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TeL7EfvreluZZUaXhAU3i+xHUedf/9k=
</value>
  </data>
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        bkY7XNRXq316Hvj/2Q==
</value>
  </data>
</root>